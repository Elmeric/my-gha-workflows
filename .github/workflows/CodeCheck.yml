name: Code Check

on:
  workflow_call:
    inputs:
      python_version:
        description: 'Python version.'
        required: false
        default: '3.11'
        type: string
      poetry-version:
        description: "Version of Poetry to use for the build (>=1.2.0)"
        required: true
        type: string
      commands:
        description: 'Commands to run the code checkers.'
        required: true
        type: string

jobs:

  StaticTypeCheck:
    name: 👀 Check code using Python ${{ inputs.python_version }}
    runs-on: ubuntu-latest

    steps:
      - name: ⏬ Checkout repository
        uses: actions/checkout@v3

      - name: 🐍 Setup python ${{ inputs.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}

      - name: Cache poetry install
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: "poetry-${{ runner.os }}-py${{ inputs.python-version }}-${{ inputs.poetry-version }}-0"

      - name: Setup Poetry
        uses: snok/install-poetry@v1
        with:
          version: "${{ inputs.poetry-version }}"
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: .venv
          key: devdeps-${{ runner.os }}-py${{ inputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: 🗂 Install dependencies
        shell: bash
        run: poetry install --no-interaction --no-root --without test,docs
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - name: 🗂 Install project
        shell: bash
        run: poetry install --no-interaction --only-root

      - name: Run code checkers
        shell: bash
        run: |
          source $VENV
          ${{ inputs.commands }}
